#!/usr/bin/env bash

set -o errexit
set -o nounset

usage() {
  printf "Docker Push Image\n"

  printf "Usage: bin/docker/push "
  printf -- "-i <image> "
  printf -- "-t <tag> "
  printf -- "[-c <current_tag>] "
  printf -- "[-u] "
  printf -- "[-h] "
  printf -- "[-v] "
  printf "\n"

  printf "  -%s\t%s - %s%s\n" "i" "image" "Image name" ""
  printf "  -%s\t%s - %s%s\n" "t" "tag" "Image tag" ""
  printf "  -%s\t%s - %s%s\n" "c" "current_tag" "Image current tag" " (default: latest)"
  printf "  -%s\t%s - %s%s\n" "u" "current_update" "Update current image" ""
  printf "  -%s\t%s - %s%s\n" "h" "help" "Show this help message." ""
  printf "  -%s\t%s - %s%s\n" "v" "version" "Show version information." ""
}

version() {
  printf "0.0.1\n"
}

# default values
opt_help="false"
opt_version="false"
opt_current_update="false"
opt_tag=""
opt_image=""
opt_current_tag="latest"

# declared functions

# option parsing
OPTSPEC=:hvt:i:c:u
while getopts $OPTSPEC option; do
  case "$option" in
    h ) opt_help="true"; usage; exit 0  ;;
    v ) opt_version="true"; version; exit 0  ;;
    t ) opt_tag=$OPTARG;  ;;
    i ) opt_image=$OPTARG;  ;;
    c ) opt_current_tag=$OPTARG;  ;;
    u ) opt_current_update="true";  ;;
   \? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
    : ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
    * ) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
  esac
done
shift $((OPTIND - 1))

# required option validation
if [ -z "$opt_tag" ] || [ -z "$opt_image" ] ; then
  usage
  exit 1
fi

docker tag $opt_image:$opt_current_tag $opt_image:$opt_tag
docker push $opt_image:$opt_tag

if [ ! -z $opt_current_update ]; then
    docker push $opt_image:$opt_current_tag
fi